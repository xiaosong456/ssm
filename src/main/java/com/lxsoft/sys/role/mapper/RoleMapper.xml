<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxsoft.sys.role.mapper.RoleMapper">

    <insert id="add" parameterType="com.lxsoft.sys.role.entity.Role">
        INSERT INTO t_role(name,sn)
        VALUES (#{name},#{sn})
    </insert>

    <delete id="delete" parameterType="int">
        DELETE FROM t_role
        WHERE id = #{id}
    </delete>

    <delete id="batchDelete" parameterType="list">
        DELETE FROM t_role
        WHERE id IN
        <foreach collection="ids" separator="," item="id" open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="load" parameterType="int" resultType="com.lxsoft.sys.role.entity.Role">
        SELECT
        id,
        name,
        sn
        FROM
        t_role
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="com.lxsoft.sys.role.entity.Role">
        UPDATE
        t_role
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sn != null">
                sn = #{sn},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="listRole" resultType="com.lxsoft.sys.role.entity.Role">
        SELECT
        id,
        name,
        sn
        FROM
        t_role
    </select>

    <select id="loadUserRole" resultType="com.lxsoft.sys.user.entity.UserRole" parameterType="map">
        SELECT
        id,
        user_id,
        role_id
        FROM
        t_user_role
        WHERE
        user_id = #{userId} AND role_id = #{roleId}
    </select>

    <insert id="addUserRole" parameterType="map">
        INSERT INTO t_user_role(user_id,role_id)
        VALUES(#{userId},#{roleId})
    </insert>

    <!-- 批量添加用户角色关联表数据 -->
    <insert id="addUserRoles" parameterType="map">
        INSERT INTO t_user_role(user_id,role_id)
        VALUES
        <foreach collection="roleIds" item="role_id" separator=",">
            (#{userId},#{role_id})
        </foreach>
    </insert>

    <delete id="deleteUserRole" parameterType="map">
        DELETE FROM t_user_role
        WHERE
        user_id = #{userId} AND role_id = #{roleId}
    </delete>

    <!-- 删除这个用户所有的角色 -->
    <delete id="deleteUserRoles">
        DELETE FROM t_user_role
        WHERE
        user_id = #{userId}
    </delete>

    <!-- 根据角色 id 查询该角色 id 下的所有资源 -->
    <select id="listRoleResource" parameterType="int" resultType="com.lxsoft.sys.resource.entity.Resource">
        SELECT
        tr.id,
        tr.name,
        tr.permission,
        tr.url
        FROM t_resource tr
        LEFT JOIN t_role_resource trr ON tr.id = trr.resource_id
        WHERE trr.role_id = #{roleId}
    </select>

    <insert id="addRoleResource" parameterType="map">
        INSERT INTO t_role_resource(role_id,resource_id)
        VALUES(#{roleId},#{resourceId})
    </insert>

    <delete id="deleteRoleResource" parameterType="map">
        DELETE FROM t_role_resource
        WHERE
        role_id = #{roleId} AND resource_id = #{resourceId}
    </delete>

    <select id="loadResourceRole" parameterType="map" resultType="com.lxsoft.sys.role.entity.RoleResource">
        SELECT
        id,
        role_id,
        resource_id
        FROM
        t_role_resource
        WHERE
        role_id = #{roleId} AND resource_id = #{resourceId}
    </select>

    <delete id="batchDeleteRoleResource" parameterType="list">
        DELETE FROM t_role_resource
        WHERE role_id IN
        <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteRoleAndUser" parameterType="list">
        DELETE FROM t_user_role
        WHERE role_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>